// Code generated by sqlc. DO NOT EDIT.
// source: get_post.sql

package search_queries

import (
	"context"
	"database/sql"
	"time"
)

const getPost = `-- name: GetPost :one
SELECT p.id,
  p.text,
  p.parent_post_id,
  p.root_post_id,
  p.author_did,
  p.created_at,
  p.has_embedded_media,
  p.parent_relationship,
  p.sentiment,
  p.sentiment_confidence,
  p.indexed_at,
  COALESCE(
    json_agg(
      json_build_object(
        'cid',
        i.cid,
        'post_id',
        i.post_id,
        'author_did',
        i.author_did,
        'alt_text',
        i.alt_text,
        'mime_type',
        i.mime_type,
        'fullsize_url',
        i.fullsize_url,
        'thumbnail_url',
        i.thumbnail_url,
        'created_at',
        i.created_at,
        'cv_completed',
        i.cv_completed,
        'cv_run_at',
        i.cv_run_at,
        'cv_classes',
        i.cv_classes
      )
    ) FILTER (
      WHERE i.cid IS NOT NULL
    ),
    '[]'
  ) as images
FROM posts p
  LEFT JOIN images i ON p.id = i.post_id
WHERE p.id = $1
GROUP BY p.id
`

type GetPostRow struct {
	ID                  string          `json:"id"`
	Text                string          `json:"text"`
	ParentPostID        sql.NullString  `json:"parent_post_id"`
	RootPostID          sql.NullString  `json:"root_post_id"`
	AuthorDid           string          `json:"author_did"`
	CreatedAt           time.Time       `json:"created_at"`
	HasEmbeddedMedia    bool            `json:"has_embedded_media"`
	ParentRelationship  sql.NullString  `json:"parent_relationship"`
	Sentiment           sql.NullString  `json:"sentiment"`
	SentimentConfidence sql.NullFloat64 `json:"sentiment_confidence"`
	IndexedAt           sql.NullTime    `json:"indexed_at"`
	Images              interface{}     `json:"images"`
}

func (q *Queries) GetPost(ctx context.Context, id string) (GetPostRow, error) {
	row := q.queryRow(ctx, q.getPostStmt, getPost, id)
	var i GetPostRow
	err := row.Scan(
		&i.ID,
		&i.Text,
		&i.ParentPostID,
		&i.RootPostID,
		&i.AuthorDid,
		&i.CreatedAt,
		&i.HasEmbeddedMedia,
		&i.ParentRelationship,
		&i.Sentiment,
		&i.SentimentConfidence,
		&i.IndexedAt,
		&i.Images,
	)
	return i, err
}
